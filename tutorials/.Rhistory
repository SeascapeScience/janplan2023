library(sf)
library(leaflet)
plot(data$decimalLongitude,data$decimalLatitude)
length(data)
View(data)
View(data)
dim(data)
dim(data)[1]
species.count=NA
for (i in 1:length(species.list))
{
x <- read_species(species.list[i])
species.count <- dim(x)[1]
}
plot(species.count)
species.count=NA
for (i in 1:length(species.list))
{
x <- read_species(species.list[i])
species.count[i] <- dim(x)[1]
}
plot(species.count)
bar(species.count)
q()
q()
setwd('~/Work/Research/Antarctic/krill-tank-code/DataProcessing/Notebooks/')
library(ggplot2)
library(GGally)
load('~/Work/Data/Antarctic/Total Merged Data File (July 11 2022).RData')
View(CC.TotalData)
flow.rate <- 0  # 0 0.6 3 5.9 8.9
chlorophyll <- 0 # 0 4.3 4.6 5.5 6.1 7.6 13.5 19
guano <- 1 # Absent=1 Present=2
light <- 2 # Absent=1 Present=2
ggpairs(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),],
columns = c(21,22,23,26,27,28))
class(CC.TotalData)
dim(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),])
guano<-2
ggpairs(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),],
columns = c(21,22,23,26,27,28))
save(CC.TotalData,file="CC.TotalData.2022.07.20.RData")
)
rm(list=ls(all=TRUE))
load('~/Work/Data/Antarctic/CC.TotalData.2022.07.20.RData')
flow.rate <- 0  # 0 0.6 3 5.9 8.9
chlorophyll <- 0 # 0 4.3 4.6 5.5 6.1 7.6 13.5 19
guano <- 1 # Absent=1 Present=2
light <- 2 # Absent=1 Present=2
ggpairs(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),],
columns = c(21,22,23,26,27,28))
plot(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),c(21,28)])
plot(log10(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),21]),
log10(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),28]))
plot(log10(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),21]),
(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),22]))
plot((CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),22]),
(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),22]))
plot((CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),22]),
(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),23]))
plot((CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),22]),
(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),23]),
pch = 20,
cex = 2,
col = rgb(0, 1, 0, .5))
plot((CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),22]),
(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),23]),
pch = 20,
cex = 2,
col = rgb(1, 1, 1, .2))
plot((CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),22]),
(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),23]),
pch = 20,
cex = 2,
col = rgb(0, 0, 0, .2))
plot((CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),22]),
(CC.TotalData[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light),23]),
pch = 20,
cex = 1.2,
col = rgb(0, 0, 0.2, .1))
# This is a work in progress....
rm(list=ls(all=TRUE))
#load("C:\\Users\\Nicole Hellessey\\Documents\\Post-doc\\Data\\Total Merged Data File (July 12 2022).Rdata")
#load('~/Work/Data/Antarctic/Total Merged Data File (July 11 2022).RData')
load('~/Work/Data/Antarctic/CC.TotalData.2022.07.20.RData')
flow.rate <- 0  # 0 0.6 3 5.9 8.9
chlorophyll <- 0 # 0 4.3 4.6 5.5 6.1 7.6 13.5 19
guano <- 1 # Absent=1 Present=2
light <- 2 # Absent=1 Present=2
x <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
length(x)
plot(x[1:length(x)-1],x[2:length(x)])
plot(log10(x[1:length(x)-1]),log10(x[2:length(x)]))
plot(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]),
pch = 20,
cex = 1.2,
col = rgb(0, 0, 0.2, .1))
velocity<-x
col = rgb(0, 0, 0.2, .1))
plot(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]),
pch = 20,
cex = 1.2,
col = rgb(0, 0, 0.2, .1))
plot(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]),
pch = 20,
cex = 1.2,
col = rgb(0, 0, 0.2, .1))
plot(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]),
pch = 20,
cex = 1.2,
col = rgb(0, 0, 0.2, .05))
c<-corr(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]))
c<-cor(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]))
c
c<-cor.test(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]))
c
c$statistic
c$estimate
c$estimate^2
for (i in unique(CC.TotalData$Chlorophyll)) {
i
}
for (chl in unique(CC.TotalData$Chlorophyll)) {
chl+1
}
chl
for (chl in unique(CC.TotalData$Chlorophyll)) {
as.numeric(chl)+1
end
for (chl in unique(CC.TotalData$Chlorophyll)) {
as.numeric(chl)+1
}
length(unique(CC.TotalData$Chlorophyll))
C <- NA
chls <- unique(CC.TotalData$Chlorophyll)
for (i in 1:length(chls))
{
chlorophyll <- as.numeric(chls[i])
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
c<-cor.test(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]))
C[i] <- c$estimate
}
i
chlorophyll
chls[i]
chls[[i]]
as.numeric(unique(CC.TotalData$Chlorophyll))
class(unique(CC.TotalData$Chlorophyll))
(unique(CC.TotalData$Chlorophyll))
unique(CC.TotalData$Chlorophyll)
as.character(unique(CC.TotalData$Chlorophyll))
as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
C <- NA
chls <- as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
for (i in 1:length(chls))
{
chlorophyll <- (chls[i])
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
c<-cor.test(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]))
C[i] <- c$estimate
}
i
C
C <- NA
chls <- as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
for (i in 1:length(chls))
{
chlorophyll <- (chls[i])
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
c<-cor.test(1+log10(velocity[1:length(x)-1]),log10(1+velocity[2:length(x)]))
C[i] <- c$estimate
}
i
dim(velocity)
length(velocity)
C <- NA
chls <- as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
for (i in 1:length(chls))
{
chlorophyll <- (chls[i])
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
c<-cor.test(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]))
if (length(velocity) <= 1) {
C[i] <- NA } else {
C[i] <- c$estimate}
}
i
C <- NA
chls <- as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
for (i in 1:length(chls))
{
chlorophyll <- (chls[i])
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
c<-cor.test(log10(velocity[1:length(x)-1]),log10(velocity[2:length(x)]))
if (length(velocity) <= 1) {
C[i] <- NA } else {
c<-cor.test(log10(velocity[1:length(x)-1]),
log10(velocity[2:length(x)]))
C[i] <- c$estimate}
}
i
length(velocity)
C <- NA
chls <- as.numeric(as.character(unique(CC.TotalData$Chlorophyll)))
for (i in 1:length(chls))
{
chlorophyll <- (chls[i])
velocity <- CC.TotalData$v[
(CC.TotalData$Flow.rate==flow.rate &
CC.TotalData$Chlorophyll==chlorophyll &
as.numeric(CC.TotalData$Guano)==guano &
as.numeric(CC.TotalData$Light)==light)]
if (length(velocity) <= 1) {
C[i] <- NA } else {
c<-cor.test(log10(velocity[1:length(x)-1]),
log10(velocity[2:length(x)]))
C[i] <- c$estimate}
}
C
plot(chls,C)
plot(chls,C,xlab='Chlorophyll',ylab='autocorrelation')
q()
q()
setwd('~/Work/Teaching/Colby/JanPlan2023/janplan2023/')
system('ls')
setwd('~/Work/Teaching/Colby/JanPlan2023/janplan2023/tutorials/')
system('ls')
knitr::opts_chunk$set(echo = TRUE)
library(tidymodels)  # for the parsnip package, along with the rest of tidymodels
# Helper packages
library(readr)       # for importing data
library(broom.mixed) # for converting bayesian models to tidy tibbles
install.packages('broom.mixed')
library(tidymodels)  # for the parsnip package, along with the rest of tidymodels
# Helper packages
library(readr)       # for importing data
library(broom.mixed) # for converting bayesian models to tidy tibbles
library(dotwhisker)  # for visualizing regression results
install.packages('dotwhisker')
library(tidymodels)  # for the parsnip package, along with the rest of tidymodels
# Helper packages
library(readr)       # for importing data
library(broom.mixed) # for converting bayesian models to tidy tibbles
library(dotwhisker)  # for visualizing regression results
urchins <-
# Data were assembled for a tutorial
# at https://www.flutterbys.com.au/stats/tut/tut7.5a.html
read_csv("https://tidymodels.org/start/models/urchins.csv") %>%
# Change the names to be a little more verbose
setNames(c("food_regime", "initial_volume", "width")) %>%
# Factors are very helpful for modeling, so we convert one column
mutate(food_regime = factor(food_regime, levels = c("Initial", "Low", "High")))
urchins
ggplot(urchins,
aes(x = initial_volume,
y = width,
group = food_regime,
col = food_regime)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_color_viridis_d(option = "plasma", end = .7)
#> `geom_smooth()` using formula = 'y ~ x'
ggplot(urchins,
aes(x = initial_volume,
y = width,
group = food_regime,
col = food_regime)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
scale_color_viridis_d(option = "plasma", end = .7)
knitr::opts_chunk$set(echo = TRUE)
5+7
5+7
x <- 5+7
y <- 24
x
y
y / x
x <- 5+7
y <- 24
x  # Show what x is
y  # Show what y is
y / x  # Show y divided by x
z <- 'twelve'
z  # Show what z is
x <- 5+7
y <- 24
x  # Show what x is
y  # Show what y is
y / x  # Show y divided by x
z <- 'twelve'
z  # Show what z is
z / 2
x <- 5+7
y <- 24
x  # Show what x is
y  # Show what y is
y / x  # Show y divided by x
z <- 'twelve'
z  # Show what z is
z / 2 # Try to divide a character string (i.e. a word) by a number
age <- c(55,22,13,45,10)
height <- c(200,190,175,180,120)
data <- table(df$age,df$height)
?table
library('data.table')
data <- data.table(age,height)
library('data.table')
age <- c(55,22,13,45,10)
height <- c(200,190,175,180,120)
data <- data.table(age,height)
data
min(data$age)
max(data$height)
plot(data$age,data$height)
plot(data$age, data$height,
title = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3)
plot(data$age, data$height,
main = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3)
plot(data$age, data$height,
main = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3,
pch = 19)
plot(data$age, data$height,
main = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3,
pch = 19,
col = 'blue')
plot(data$age, data$height,
main = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3,
pch = 21,
col = 'blue',
bg = 'red')
plot(data$age, data$height,
main = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3,
pch = 21,
col = 'blue',
bg = 'red',
lwd = 3)
plot(data$age, data$height,
main = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3,
pch = 21,
col = 'blue',
bg = 'red',
lwd = 3,
axes = F)
plot(data$age, data$height,
main = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3,
pch = 21,
col = 'blue',
bg = 'red',
lwd = 3,
axes = FALSE)
plot(data$age, data$height,
main = 'Some data I made up',
xlab = 'Age (years)',
ylab = 'Height (cm)',
cex = 3,
pch = 21,
col = 'blue',
bg = 'red',
lwd = 3)
nao <- read.csv('../data/nao.csv')
nao <- read.csv('../data/nao.csv')
nao
plot(nao$Year,nao$Jan.nao)
nao[nao == -99.99] <- NA
nao[nao == -99.99] <- NA
plot(nao$Year,nao$Jan.nao)
nao[nao == -99.99] <- NA
plot(nao$Year,nao$Jan.nao,
type = 'l')
nao[nao == -99.99] <- NA
plot(nao$Year,nao$Jan.nao,
type = 'l',
xlab = 'year',
ylab = 'NAO January index')
data$age[2]
View(data)
View(data)
amo <- read.csv('../data/amo.csv')
q()
